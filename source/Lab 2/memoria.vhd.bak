LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
ENTITY ram IS
GENERIC(
d_width : INTEGER := 8;
m_width : INTEGER := 6);
PORT(
clk : IN STD_LOGIC;
wr_ena : IN STD_LOGIC;
addr : IN STD_LOGIC_VECTOR(m_width - 1 DOWNTO 0);
data_in : IN STD_LOGIC_VECTOR(d_width - 1 DOWNTO 0);
data_out : OUT STD_LOGIC_VECTOR(d_width - 1 DOWNTO 0));

END ram;
ARCHITECTURE logic OF ram IS
TYPE memory IS ARRAY(2**m_width - 1 DOWNTO 0) OF STD_LOGIC_VECTOR(d_width-1 DOWNTO 0);
SIGNAL ram : memory;
SIGNAL addr_int : INTEGER RANGE 0 TO 2**m_width - 1;
BEGIN
addr_int <= to_integer(unsigned(addr));
PROCESS(clk,addr_int)
BEGIN
IF(rising_edge(clk)) THEN
IF(wr_ena = '1') THEN
ram(addr_int) <= data_in;
END IF;
END IF;
data_out <= ram(addr_int);
END PROCESS;
END logic;